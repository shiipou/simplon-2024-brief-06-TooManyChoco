name: Release

on:
  push:
    branches:
    - main
    - beta

jobs:
  get-version:
    uses: shiipou/github-actions/.github/workflows/get-version.yml@main
    with:
      prerelease-branches: "^(beta)$"

  build:
    runs-on: ubuntu-latest
    needs: [get-version]
    if: ${{ needs.get-version.outputs.will-release }}
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'microsoft'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      env:
        VERSION: ${{ needs.get-version.outputs.version }}
      run: |
        ./gradlew -Pversion="${VERSION}" jar
        cp app/build/libs/app.jar app/build/libs/TooManyChoco.jar

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: TooManyChoco.jar
        path: app/build/libs/TooManyChoco.jar
        if-no-files-found: error

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'microsoft'
    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

  release:
    needs: [get-version, build]
    if: ${{ needs.get-version.outputs.will-release }}
    uses: shiipou/github-actions/.github/workflows/release.yml@main
    with:
      version: ${{ needs.get-version.outputs.version }}
      changelogs: ${{ needs.get-version.outputs.changelogs }}
      is-prerelease: ${{ needs.get-version.outputs.is-prerelease }}
      download-artifacts: true
      assets: "*.jar"
